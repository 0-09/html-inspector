/*!
 * HTML Inspector - v0.1.0
 *
 * Copyright (c) 2013 Philip Walton <http://philipwalton.com>
 * Released under the MIT license
 *
 * Date: 2013-05-29
 */
!function(a,b,c){function d(a){return[].slice.call(a)}function e(a){var b=[];return a=a.sort(),a.forEach(function(c,d){c!==a[d-1]&&b.push(c)}),b}function f(){this._events={}}function g(){this._errors=[]}f.prototype.on=function(a,c){this._events[a]||(this._events[a]=b.Callbacks()),this._events[a].add(c)},f.prototype.off=function(a,b){this._events[a]&&this._events[a].remove(b)},f.prototype.trigger=function(a,b,c){this._events[a]&&this._events[a].fireWith(b,c)},g.prototype.addError=function(a,b,c){this._errors.push({rule:a,message:b,context:c})},g.prototype.getErrors=function(){return this._errors};var h=function(){function a(a,b,c){a="all"==a?Object.keys(h.rules):a,a.forEach(function(a){h.rules[a]&&h.rules[a].call(h,b,c)})}function c(a,c){var e=b(a),f=e.add(e.find("*"));c.trigger("beforeInspect",h.config.domRoot),f.each(function(){var a=this;c.trigger("element",a,[a.nodeName.toLowerCase(),a]),a.id&&c.trigger("id",a,[a.id,a]),d(a.classList).forEach(function(b){c.trigger("class",a,[b,a])})}),c.trigger("afterInspect",h.config.domRoot)}function e(a){return a&&("string"==typeof a||1==a.nodeType||a instanceof b?a={domRoot:a}:Array.isArray(a)?a={rules:a}:"function"==typeof a&&(a={complete:a})),b.extend({},h.config,a)}var h={config:{rules:"all",domRoot:"html",complete:function(a){a.forEach(function(a){console.warn(a.message,a.context)})}},rules:{},extensions:{},addRule:function(a,b){h.rules[a]=b},addExtension:function(a,b){h.extensions[a]=b},inspect:function(b){var d=new f,h=new g;b=e(b),a(b.rules,d,h),c(b.domRoot,d),b.complete(h.getErrors())}};return h}();h.addExtension("bem",function(){var a=/^[A-Z][a-zA-Z]*\-\-[a-zA-Z]+$/,b=/^[A-Z][a-zA-Z]*\-[a-zA-Z]+$/,c=/\-\-?[a-zA-Z]+$/;return{getBlockName:function(a){return c.test(a)&&a.replace(c,"")},isBlockModifier:function(b){return a.test(b)},isBlockElement:function(a){return b.test(a)}}}()),h.addExtension("css",function(){function a(b){return b.reduce(function(b,c){var e;return c.cssRules?b.concat(a(d(c.cssRules))):c.selectorText?(e=c.selectorText.match(h)||[],b.concat(e.map(function(a){return a.slice(1)}))):b},[])}function f(b){return b.reduce(function(b,c){return b.concat(a(d(c.cssRules)))},[])}function g(){return d(c.styleSheets).filter(function(a){return b(a.ownerNode).is(i.styleSheets)})}var h=/\.[a-z0-9_\-]+/gi,i={getClassSelectors:function(){return e(f(g()))},styleSheets:'link[rel="stylesheet"], style'};return i}()),h.addRule("bem-misused-elements",function(a,c){var d=this.extensions.bem;a.on("class",function(a){d.isBlockElement(a)&&(b(this).parents("."+d.getBlockName(a)).length||c.addError("bem-misused-modifier","The BEM element '"+a+"' must be a descendent of '"+d.getBlockName(a)+"'.'",this))})}),h.addRule("bem-misused-modifiers",function(a,b){var c=this.extensions.bem;a.on("class",function(a){if(c.isBlockModifier(a)){var e=d(this.classList),f=e.every(function(b){return c.getBlockName(a)!==b});f&&b.addError("bem-misused-modifiers","The BEM modifier class '"+a+"' was found without the block base class '"+c.getBlockName(a)+"'.",this)}})}),h.addRule("nonsemantic-elements",function(a,b){a.on("element",function(a){var c="div"==a||"span"==a,d=0===this.attributes.length;c&&d&&b.addError("nonsemantic-elements","Do not use <div> or <span> elements without any attributes.",this)})}),h.addRule("unused-classes",function(a,b){var c=/^js\-|^supports\-|^language\-|^lang\-/,d=this.extensions.css.getClassSelectors();a.on("class",function(a){c.test(a)||-1!=d.indexOf(a)||b.addError("unused-classes","The class '"+a+"' is used in the HTML but not found in any stylesheet.",this)})}),window.HTMLInspector=h}(this,jQuery,document);